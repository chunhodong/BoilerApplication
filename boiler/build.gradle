plugins {
	id 'org.springframework.boot' version '2.6.10'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'jacoco'
}

jacoco {
	toolVersion = '0.8.7'
}

jacocoTestReport {
	dependsOn test
	reports {
		html.enabled true
		csv.enabled true
		xml.enabled true
	}


	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, excludes: [

					])
				})
		)
	}


}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.9

			}
		}
	}
}

task testCoverage(type: Test) {
	group 'verification'
	description 'Runs the unit tests with coverage'

	dependsOn(':test',
			':jacocoTestReport')

	tasks['jacocoTestReport'].mustRunAfter(tasks['test'])
}


group = 'com.bronze'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	/*
	 * implementation      : 모듈을 수정하면 모듈을 직접적으로 의존하는 모듈까지만 rebuild
	 * compileOnly         : 컴파일타임에만 사용하고, 런타임때는 사용하지 않아도됨
	 * runtimeOnly         : 런타임시에만 필요하고, 컴파일타임때는 필요없음
	 * testImplementation  : 테스트시에만 사용
	 * testRuntimeOnly     : 테스트런타임시에만 적용
	 * annotationProcessor : 컴파일타임에 어노테이션을 분석
	 */

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	//유효성검증 어노테이션추가
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//롬복기능사용
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//JUnit4,JUnit5 모두포함, JUnit4,5 테스트 모두가능
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//JUnit5기능사용
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	//H2DB연결
	testRuntimeOnly 'com.h2database:h2'
	//querydsl사용
	compileOnly 'com.querydsl:querydsl-jpa'
	compileOnly 'com.querydsl:querydsl-apt'


}

configure("querydsl-project") {
	apply plugin: "io.spring.dependency-management"

	dependencies {
		compileOnly "com.querydsl:querydsl-core"
		compileOnly "com.querydsl:querydsl-jpa"

		annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
		annotationProcessor("jakarta.persistence:jakarta.persistence-api")
		annotationProcessor("jakarta.annotation:jakarta.annotation-api")
	}


	// Gradle clean을 하게되면 생성된 generated 아래 Q클래스 파일이 삭제된다
	clean {
		delete file('src/main/generated') // 인텔리제이 큐 클래스 경로
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
